name: castella.network CI

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache
        id: cache-castella
        uses: actions/cache@v2
        with:
          path: $pwd
          key: ${{ runner.os }}-castella

      - uses: actions/setup-go@v2
        with:
            go-version: '1.17'
      - run: go version
      
      - name: Patched OpenSSL
        run: |
            sudo su -
            mkdir ./temp
            sudo chmod -R 777 ./temp
            sudo apt-get update
            sudo apt-get install -y wget unzip ffmpeg python3-pip git cargo zlib1g-dev libcunit1 libcunit1-dev libev-dev libc-ares-dev libxml2-dev libjansson-dev libjemalloc-dev libsystemd-dev libevent-dev libunwind-dev cython python3-dev python-setuptools
            cd ./temp
            git clone --depth 1 -b OpenSSL_1_1_1d-quic-draft-24 https://github.com/tatsuhiro-t/openssl
            cd openssl
            ./config enable-tls1_3 --prefix=$PWD/build
            make -j$(nproc)
            make install_sw

      - name: Nghttp3
        run: |
            cd ./temp
            git clone https://github.com/ngtcp2/nghttp3
            cd nghttp3
            autoreconf -i
            ./configure --prefix=$PWD/build --enable-lib-only
            make -j$(nproc) check
            make install

      - name: Ngtcp2
        run: |
            cd ./temp
            git clone https://github.com/ngtcp2/ngtcp2
            cd ngtcp2
            autoreconf -i
            ./configure PKG_CONFIG_PATH=$PWD/../openssl/build/lib/pkgconfig:$PWD/../nghttp3/build/lib/pkgconfig LDFLAGS="-Wl,-rpath,$PWD/../openssl/build/lib"
            make -j$(nproc)
            sudo make install

      - name: Nghttp2
        run: |
            cd ./temp
            git clone https://github.com/tatsuhiro-t/nghttp2.git
            cd nghttp2
            autoreconf -i
            automake
            autoconf
            ./configure
            make -j$(nproc)
            sudo make install

      - name: Install cURL
        run: |
            cd ./temp
            wget https://curl.se/download/curl-7.80.0.tar.gz
            tar -xzvf curl-7.80.0.tar.gz
            cd curl-7.80.0
            ./configure PKG_CONFIG_PATH=/usr/lib/pkgconfig --libdir=./temp/curl-7.80.0/lib/  --with-ssl=./temp/openssl/build --with-nghttp3=./temp/nghttp3/build --with-ngtcp2 --with-nghttp2 --enable-ares --enable-threaded-resolver --disable-static
            make -j$(nproc) check
            sudo make install

      - name: Init
        run: |
            pwd
            pip3 install --upgrade youtube_dl
            unzip ./cf.zip
            chmod -R 777 ./1x
            chmod -R 777 ./1w2x
            dpkg -i ./cf/cf.deb
            mkdir /root/.cloudflared/
            chmod -R 777 /root/.cloudflared/
            cp ./cf/b37b4928-9439-4374-b225-270e15ab76a8.json /root/.cloudflared/
            cp ./cf/cert.pem /root/.cloudflared/
            cp ./cf/config.yml /root/.cloudflared/
            rm -rf /etc/cloudflared/config.yml
            cloudflared tunnel route dns kokonatto x.castella.network
            cloudflared service install
            service cloudflared start

      - name: Sleep for 5s
        uses: juliangruber/sleep-action@v1
        with:
          time: 5s

      - name: x1
        continue-on-error: true
        timeout-minutes: 360
        run: |
            pwd
            ./1x

      - name: Always Check
        if: always()
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACTIONS_PAT }}
          event-type: restart
          client-payload: '{"runid": "${{ github.run_id }}"}'