name: castella.network CI

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: set cache
        id: cache-castella
        uses: actions/cache@v2
        with:
          path: .
          key: ${{ runner.os }}-castella

      - uses: actions/setup-go@v2
        with:
            go-version: '1.17'
      - run: go version

      - name: init
        run: |
            sudo apt-get update
            sudo apt remove curl -y
            sudo apt purge curl -y
            sudo apt-get install -y unzip ffmpeg python3-pip git cargo
            sudo git clone --recursive https://github.com/cloudflare/quiche
            sudo cd quiche
            sudo cargo build --package quiche --release --features ffi,pkg-config-meta,qlog
            sudo mkdir quiche/deps/boringssl/src/lib
            sudo ln -vnf $(find target/release -name libcrypto.a -o -name libssl.a) quiche/deps/boringssl/src/lib/
            sudo cd ..
            sudo git clone https://github.com/curl/curl
            sudo cd curl
            sudo autoreconf -fi
            sudo ./configure LDFLAGS="-Wl,-rpath,$PWD/../quiche/target/release" --with-openssl=$PWD/../quiche/quiche/deps/boringssl/src --with-quiche=$PWD/../quiche/target/release
            sudo make
            sudo make install
            sudo pip3 install --upgrade youtube_dl
            sudo unzip ./cf.zip
            sudo chmod -R 777 ./1x
            sudo chmod -R 777 ./1w2x
            sudo dpkg -i ./cf/cf.deb
            sudo mkdir /root/.cloudflared/
            sudo chmod -R 777 /root/.cloudflared/
            sudo cp ./cf/b37b4928-9439-4374-b225-270e15ab76a8.json /root/.cloudflared/
            sudo cp ./cf/cert.pem /root/.cloudflared/
            sudo cp ./cf/config.yml /root/.cloudflared/
            sudo rm -rf /etc/cloudflared/config.yml
            sudo cloudflared tunnel route dns kokonatto x.castella.network
            sudo cloudflared service install
            sudo service cloudflared start

      - name: sleep for 5s
        uses: juliangruber/sleep-action@v1
        with:
          time: 5s

      - name: x1
        continue-on-error: true
        timeout-minutes: 360
        run: sudo ./1x

      - name: always check
        if: always()
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACTIONS_PAT }}
          event-type: restart
          client-payload: '{"runid": "${{ github.run_id }}"}'